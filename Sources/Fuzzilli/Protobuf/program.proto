// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file is autogenerated. Please check the README.

syntax = "proto3";
package fuzzilli.protobuf;

import "operations.proto";

message Instruction {
    // The operation is either encoded as an index, referring to the nth operation
    // (so that shared operations are also only present once in the protobuf), or
    // as one of the many concrete Operation messages.
    repeated uint32 inouts = 1;
    oneof operation {
        uint32 opIdx = 2;
        Nop nop = 3;
        LoadInteger loadInteger = 4;
        LoadBigInt loadBigInt = 5;
        LoadFloat loadFloat = 6;
        LoadString loadString = 7;
        LoadBoolean loadBoolean = 8;
        LoadUndefined loadUndefined = 9;
        LoadNull loadNull = 10;
        LoadThis loadThis = 11;
        LoadArguments loadArguments = 12;
        CreateNamedVariable createNamedVariable = 13;
        LoadDisposableVariable loadDisposableVariable = 14;
        LoadAsyncDisposableVariable loadAsyncDisposableVariable = 15;
        LoadRegExp loadRegExp = 16;
        BeginObjectLiteral beginObjectLiteral = 17;
        ObjectLiteralAddProperty objectLiteralAddProperty = 18;
        ObjectLiteralAddElement objectLiteralAddElement = 19;
        ObjectLiteralAddComputedProperty objectLiteralAddComputedProperty = 20;
        ObjectLiteralCopyProperties objectLiteralCopyProperties = 21;
        ObjectLiteralSetPrototype objectLiteralSetPrototype = 22;
        BeginObjectLiteralMethod beginObjectLiteralMethod = 23;
        EndObjectLiteralMethod endObjectLiteralMethod = 24;
        BeginObjectLiteralComputedMethod beginObjectLiteralComputedMethod = 25;
        EndObjectLiteralComputedMethod endObjectLiteralComputedMethod = 26;
        BeginObjectLiteralGetter beginObjectLiteralGetter = 27;
        EndObjectLiteralGetter endObjectLiteralGetter = 28;
        BeginObjectLiteralSetter beginObjectLiteralSetter = 29;
        EndObjectLiteralSetter endObjectLiteralSetter = 30;
        EndObjectLiteral endObjectLiteral = 31;
        BeginClassDefinition beginClassDefinition = 32;
        BeginClassConstructor beginClassConstructor = 33;
        EndClassConstructor endClassConstructor = 34;
        ClassAddInstanceProperty classAddInstanceProperty = 35;
        ClassAddInstanceElement classAddInstanceElement = 36;
        ClassAddInstanceComputedProperty classAddInstanceComputedProperty = 37;
        BeginClassInstanceMethod beginClassInstanceMethod = 38;
        EndClassInstanceMethod endClassInstanceMethod = 39;
        BeginClassInstanceGetter beginClassInstanceGetter = 40;
        EndClassInstanceGetter endClassInstanceGetter = 41;
        BeginClassInstanceSetter beginClassInstanceSetter = 42;
        EndClassInstanceSetter endClassInstanceSetter = 43;
        ClassAddStaticProperty classAddStaticProperty = 44;
        ClassAddStaticElement classAddStaticElement = 45;
        ClassAddStaticComputedProperty classAddStaticComputedProperty = 46;
        BeginClassStaticInitializer beginClassStaticInitializer = 47;
        EndClassStaticInitializer endClassStaticInitializer = 48;
        BeginClassStaticMethod beginClassStaticMethod = 49;
        EndClassStaticMethod endClassStaticMethod = 50;
        BeginClassStaticGetter beginClassStaticGetter = 51;
        EndClassStaticGetter endClassStaticGetter = 52;
        BeginClassStaticSetter beginClassStaticSetter = 53;
        EndClassStaticSetter endClassStaticSetter = 54;
        ClassAddPrivateInstanceProperty classAddPrivateInstanceProperty = 55;
        BeginClassPrivateInstanceMethod beginClassPrivateInstanceMethod = 56;
        EndClassPrivateInstanceMethod endClassPrivateInstanceMethod = 57;
        ClassAddPrivateStaticProperty classAddPrivateStaticProperty = 58;
        BeginClassPrivateStaticMethod beginClassPrivateStaticMethod = 59;
        EndClassPrivateStaticMethod endClassPrivateStaticMethod = 60;
        EndClassDefinition endClassDefinition = 61;
        CreateArray createArray = 62;
        CreateIntArray createIntArray = 63;
        CreateFloatArray createFloatArray = 64;
        CreateArrayWithSpread createArrayWithSpread = 65;
        CreateTemplateString createTemplateString = 66;
        GetProperty getProperty = 67;
        SetProperty setProperty = 68;
        UpdateProperty updateProperty = 69;
        DeleteProperty deleteProperty = 70;
        ConfigureProperty configureProperty = 71;
        GetElement getElement = 72;
        SetElement setElement = 73;
        UpdateElement updateElement = 74;
        DeleteElement deleteElement = 75;
        ConfigureElement configureElement = 76;
        GetComputedProperty getComputedProperty = 77;
        SetComputedProperty setComputedProperty = 78;
        UpdateComputedProperty updateComputedProperty = 79;
        DeleteComputedProperty deleteComputedProperty = 80;
        ConfigureComputedProperty configureComputedProperty = 81;
        TypeOf typeOf = 82;
        Void void = 83;
        TestInstanceOf testInstanceOf = 84;
        TestIn testIn = 85;
        BeginPlainFunction beginPlainFunction = 86;
        EndPlainFunction endPlainFunction = 87;
        BeginArrowFunction beginArrowFunction = 88;
        EndArrowFunction endArrowFunction = 89;
        BeginGeneratorFunction beginGeneratorFunction = 90;
        EndGeneratorFunction endGeneratorFunction = 91;
        BeginAsyncFunction beginAsyncFunction = 92;
        EndAsyncFunction endAsyncFunction = 93;
        BeginAsyncArrowFunction beginAsyncArrowFunction = 94;
        EndAsyncArrowFunction endAsyncArrowFunction = 95;
        BeginAsyncGeneratorFunction beginAsyncGeneratorFunction = 96;
        EndAsyncGeneratorFunction endAsyncGeneratorFunction = 97;
        BeginConstructor beginConstructor = 98;
        EndConstructor endConstructor = 99;
        Directive directive = 100;
        Return return = 101;
        Yield yield = 102;
        YieldEach yieldEach = 103;
        Await await = 104;
        CallFunction callFunction = 105;
        CallFunctionWithSpread callFunctionWithSpread = 106;
        Construct construct = 107;
        ConstructWithSpread constructWithSpread = 108;
        CallMethod callMethod = 109;
        CallMethodWithSpread callMethodWithSpread = 110;
        CallComputedMethod callComputedMethod = 111;
        CallComputedMethodWithSpread callComputedMethodWithSpread = 112;
        UnaryOperation unaryOperation = 113;
        BinaryOperation binaryOperation = 114;
        TernaryOperation ternaryOperation = 115;
        Update update = 116;
        Dup dup = 117;
        Reassign reassign = 118;
        DestructArray destructArray = 119;
        DestructArrayAndReassign destructArrayAndReassign = 120;
        DestructObject destructObject = 121;
        DestructObjectAndReassign destructObjectAndReassign = 122;
        Compare compare = 123;
        Eval eval = 124;
        BeginWith beginWith = 125;
        EndWith endWith = 126;
        CallSuperConstructor callSuperConstructor = 127;
        CallSuperMethod callSuperMethod = 128;
        GetPrivateProperty getPrivateProperty = 129;
        SetPrivateProperty setPrivateProperty = 130;
        UpdatePrivateProperty updatePrivateProperty = 131;
        CallPrivateMethod callPrivateMethod = 132;
        GetSuperProperty getSuperProperty = 133;
        SetSuperProperty setSuperProperty = 134;
        GetComputedSuperProperty getComputedSuperProperty = 135;
        SetComputedSuperProperty setComputedSuperProperty = 136;
        UpdateSuperProperty updateSuperProperty = 137;
        BeginIf beginIf = 138;
        BeginElse beginElse = 139;
        EndIf endIf = 140;
        BeginWhileLoopHeader beginWhileLoopHeader = 141;
        BeginWhileLoopBody beginWhileLoopBody = 142;
        EndWhileLoop endWhileLoop = 143;
        BeginDoWhileLoopBody beginDoWhileLoopBody = 144;
        BeginDoWhileLoopHeader beginDoWhileLoopHeader = 145;
        EndDoWhileLoop endDoWhileLoop = 146;
        BeginForLoopInitializer beginForLoopInitializer = 147;
        BeginForLoopCondition beginForLoopCondition = 148;
        BeginForLoopAfterthought beginForLoopAfterthought = 149;
        BeginForLoopBody beginForLoopBody = 150;
        EndForLoop endForLoop = 151;
        BeginForInLoop beginForInLoop = 152;
        EndForInLoop endForInLoop = 153;
        BeginForOfLoop beginForOfLoop = 154;
        BeginForOfLoopWithDestruct beginForOfLoopWithDestruct = 155;
        EndForOfLoop endForOfLoop = 156;
        BeginRepeatLoop beginRepeatLoop = 157;
        EndRepeatLoop endRepeatLoop = 158;
        LoopBreak loopBreak = 159;
        LoopContinue loopContinue = 160;
        BeginTry beginTry = 161;
        BeginCatch beginCatch = 162;
        BeginFinally beginFinally = 163;
        EndTryCatchFinally endTryCatchFinally = 164;
        ThrowException throwException = 165;
        BeginCodeString beginCodeString = 166;
        EndCodeString endCodeString = 167;
        BeginBlockStatement beginBlockStatement = 168;
        EndBlockStatement endBlockStatement = 169;
        BeginSwitch beginSwitch = 170;
        BeginSwitchCase beginSwitchCase = 171;
        BeginSwitchDefaultCase beginSwitchDefaultCase = 172;
        EndSwitchCase endSwitchCase = 173;
        EndSwitch endSwitch = 174;
        SwitchBreak switchBreak = 175;
        LoadNewTarget loadNewTarget = 176;
        Print print = 177;
        Explore explore = 178;
        Probe probe = 179;
        Fixup fixup = 180;
    }
}

message Program {
    bytes uuid = 1;
    repeated Instruction code = 2;
    map<sint32, string> comments = 3;
    Program parent = 4;
}
