// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file is autogenerated. Please check the README.

syntax = "proto3";
package fuzzilli.protobuf;

import "operations.proto";

message Instruction {
    // The operation is either encoded as an index, referring to the nth operation
    // (so that shared operations are also only present once in the protobuf), or
    // as one of the many concrete Operation messages.
    repeated uint32 inouts = 1;
    oneof operation {
        uint32 opIdx = 2;
        Nop nop = 3;
        LoadInteger loadInteger = 4;
        LoadBigInt loadBigInt = 5;
        LoadFloat loadFloat = 6;
        LoadString loadString = 7;
        LoadBoolean loadBoolean = 8;
        LoadUndefined loadUndefined = 9;
        LoadNull loadNull = 10;
        LoadThis loadThis = 11;
        LoadArguments loadArguments = 12;
        LoadDisposableVariable loadDisposableVariable = 13;
        LoadAsyncDisposableVariable loadAsyncDisposableVariable = 14;
        LoadRegExp loadRegExp = 15;
        BeginObjectLiteral beginObjectLiteral = 16;
        ObjectLiteralAddProperty objectLiteralAddProperty = 17;
        ObjectLiteralAddElement objectLiteralAddElement = 18;
        ObjectLiteralAddComputedProperty objectLiteralAddComputedProperty = 19;
        ObjectLiteralCopyProperties objectLiteralCopyProperties = 20;
        ObjectLiteralSetPrototype objectLiteralSetPrototype = 21;
        BeginObjectLiteralMethod beginObjectLiteralMethod = 22;
        EndObjectLiteralMethod endObjectLiteralMethod = 23;
        BeginObjectLiteralComputedMethod beginObjectLiteralComputedMethod = 24;
        EndObjectLiteralComputedMethod endObjectLiteralComputedMethod = 25;
        BeginObjectLiteralGetter beginObjectLiteralGetter = 26;
        EndObjectLiteralGetter endObjectLiteralGetter = 27;
        BeginObjectLiteralSetter beginObjectLiteralSetter = 28;
        EndObjectLiteralSetter endObjectLiteralSetter = 29;
        EndObjectLiteral endObjectLiteral = 30;
        BeginClassDefinition beginClassDefinition = 31;
        BeginClassConstructor beginClassConstructor = 32;
        EndClassConstructor endClassConstructor = 33;
        ClassAddInstanceProperty classAddInstanceProperty = 34;
        ClassAddInstanceElement classAddInstanceElement = 35;
        ClassAddInstanceComputedProperty classAddInstanceComputedProperty = 36;
        BeginClassInstanceMethod beginClassInstanceMethod = 37;
        EndClassInstanceMethod endClassInstanceMethod = 38;
        BeginClassInstanceGetter beginClassInstanceGetter = 39;
        EndClassInstanceGetter endClassInstanceGetter = 40;
        BeginClassInstanceSetter beginClassInstanceSetter = 41;
        EndClassInstanceSetter endClassInstanceSetter = 42;
        ClassAddStaticProperty classAddStaticProperty = 43;
        ClassAddStaticElement classAddStaticElement = 44;
        ClassAddStaticComputedProperty classAddStaticComputedProperty = 45;
        BeginClassStaticInitializer beginClassStaticInitializer = 46;
        EndClassStaticInitializer endClassStaticInitializer = 47;
        BeginClassStaticMethod beginClassStaticMethod = 48;
        EndClassStaticMethod endClassStaticMethod = 49;
        BeginClassStaticGetter beginClassStaticGetter = 50;
        EndClassStaticGetter endClassStaticGetter = 51;
        BeginClassStaticSetter beginClassStaticSetter = 52;
        EndClassStaticSetter endClassStaticSetter = 53;
        ClassAddPrivateInstanceProperty classAddPrivateInstanceProperty = 54;
        BeginClassPrivateInstanceMethod beginClassPrivateInstanceMethod = 55;
        EndClassPrivateInstanceMethod endClassPrivateInstanceMethod = 56;
        ClassAddPrivateStaticProperty classAddPrivateStaticProperty = 57;
        BeginClassPrivateStaticMethod beginClassPrivateStaticMethod = 58;
        EndClassPrivateStaticMethod endClassPrivateStaticMethod = 59;
        EndClassDefinition endClassDefinition = 60;
        CreateArray createArray = 61;
        CreateIntArray createIntArray = 62;
        CreateFloatArray createFloatArray = 63;
        CreateArrayWithSpread createArrayWithSpread = 64;
        CreateTemplateString createTemplateString = 65;
        LoadBuiltin loadBuiltin = 66;
        GetProperty getProperty = 67;
        SetProperty setProperty = 68;
        UpdateProperty updateProperty = 69;
        DeleteProperty deleteProperty = 70;
        ConfigureProperty configureProperty = 71;
        GetElement getElement = 72;
        SetElement setElement = 73;
        UpdateElement updateElement = 74;
        DeleteElement deleteElement = 75;
        ConfigureElement configureElement = 76;
        GetComputedProperty getComputedProperty = 77;
        SetComputedProperty setComputedProperty = 78;
        UpdateComputedProperty updateComputedProperty = 79;
        DeleteComputedProperty deleteComputedProperty = 80;
        ConfigureComputedProperty configureComputedProperty = 81;
        TypeOf typeOf = 82;
        Void void = 83;
        TestInstanceOf testInstanceOf = 84;
        TestIn testIn = 85;
        BeginPlainFunction beginPlainFunction = 86;
        EndPlainFunction endPlainFunction = 87;
        BeginArrowFunction beginArrowFunction = 88;
        EndArrowFunction endArrowFunction = 89;
        BeginGeneratorFunction beginGeneratorFunction = 90;
        EndGeneratorFunction endGeneratorFunction = 91;
        BeginAsyncFunction beginAsyncFunction = 92;
        EndAsyncFunction endAsyncFunction = 93;
        BeginAsyncArrowFunction beginAsyncArrowFunction = 94;
        EndAsyncArrowFunction endAsyncArrowFunction = 95;
        BeginAsyncGeneratorFunction beginAsyncGeneratorFunction = 96;
        EndAsyncGeneratorFunction endAsyncGeneratorFunction = 97;
        BeginConstructor beginConstructor = 98;
        EndConstructor endConstructor = 99;
        Return return = 100;
        Yield yield = 101;
        YieldEach yieldEach = 102;
        Await await = 103;
        CallFunction callFunction = 104;
        CallFunctionWithSpread callFunctionWithSpread = 105;
        Construct construct = 106;
        ConstructWithSpread constructWithSpread = 107;
        CallMethod callMethod = 108;
        CallMethodWithSpread callMethodWithSpread = 109;
        CallComputedMethod callComputedMethod = 110;
        CallComputedMethodWithSpread callComputedMethodWithSpread = 111;
        UnaryOperation unaryOperation = 112;
        BinaryOperation binaryOperation = 113;
        TernaryOperation ternaryOperation = 114;
        Update update = 115;
        Dup dup = 116;
        Reassign reassign = 117;
        DestructArray destructArray = 118;
        DestructArrayAndReassign destructArrayAndReassign = 119;
        DestructObject destructObject = 120;
        DestructObjectAndReassign destructObjectAndReassign = 121;
        Compare compare = 122;
        LoadNamedVariable loadNamedVariable = 123;
        StoreNamedVariable storeNamedVariable = 124;
        DefineNamedVariable defineNamedVariable = 125;
        Eval eval = 126;
        BeginWith beginWith = 127;
        EndWith endWith = 128;
        CallSuperConstructor callSuperConstructor = 129;
        CallSuperMethod callSuperMethod = 130;
        GetPrivateProperty getPrivateProperty = 131;
        SetPrivateProperty setPrivateProperty = 132;
        UpdatePrivateProperty updatePrivateProperty = 133;
        CallPrivateMethod callPrivateMethod = 134;
        GetSuperProperty getSuperProperty = 135;
        SetSuperProperty setSuperProperty = 136;
        GetComputedSuperProperty getComputedSuperProperty = 137;
        SetComputedSuperProperty setComputedSuperProperty = 138;
        UpdateSuperProperty updateSuperProperty = 139;
        BeginIf beginIf = 140;
        BeginElse beginElse = 141;
        EndIf endIf = 142;
        BeginWhileLoopHeader beginWhileLoopHeader = 143;
        BeginWhileLoopBody beginWhileLoopBody = 144;
        EndWhileLoop endWhileLoop = 145;
        BeginDoWhileLoopBody beginDoWhileLoopBody = 146;
        BeginDoWhileLoopHeader beginDoWhileLoopHeader = 147;
        EndDoWhileLoop endDoWhileLoop = 148;
        BeginForLoopInitializer beginForLoopInitializer = 149;
        BeginForLoopCondition beginForLoopCondition = 150;
        BeginForLoopAfterthought beginForLoopAfterthought = 151;
        BeginForLoopBody beginForLoopBody = 152;
        EndForLoop endForLoop = 153;
        BeginForInLoop beginForInLoop = 154;
        EndForInLoop endForInLoop = 155;
        BeginForOfLoop beginForOfLoop = 156;
        BeginForOfLoopWithDestruct beginForOfLoopWithDestruct = 157;
        EndForOfLoop endForOfLoop = 158;
        BeginRepeatLoop beginRepeatLoop = 159;
        EndRepeatLoop endRepeatLoop = 160;
        LoopBreak loopBreak = 161;
        LoopContinue loopContinue = 162;
        BeginTry beginTry = 163;
        BeginCatch beginCatch = 164;
        BeginFinally beginFinally = 165;
        EndTryCatchFinally endTryCatchFinally = 166;
        ThrowException throwException = 167;
        BeginCodeString beginCodeString = 168;
        EndCodeString endCodeString = 169;
        BeginBlockStatement beginBlockStatement = 170;
        EndBlockStatement endBlockStatement = 171;
        BeginSwitch beginSwitch = 172;
        BeginSwitchCase beginSwitchCase = 173;
        BeginSwitchDefaultCase beginSwitchDefaultCase = 174;
        EndSwitchCase endSwitchCase = 175;
        EndSwitch endSwitch = 176;
        SwitchBreak switchBreak = 177;
        LoadNewTarget loadNewTarget = 178;
        Print print = 179;
        Explore explore = 180;
        Probe probe = 181;
        Fixup fixup = 182;
    }
}

message Program {
    bytes uuid = 1;
    repeated Instruction code = 2;
    map<sint32, string> comments = 3;
    Program parent = 4;
}
